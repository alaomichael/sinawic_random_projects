_format_version: "2.1"

services:

- name: echo-server
  url: http://192.168.0.106:1337  #172.29.241.32:6969
  routes:
  - name: echo
    paths:
    - /echo

consumers:
- username: user

basicauth_credentials:
- consumer: user
  username: Michael
  password: OpenGateway

keyauth_credentials:
- consumer: user
  key: abc

acls:
- consumer: user
  group: group1

# plugins section
plugins:

- name: http-log
  config: 
    http_endpoint: http://192.168.0.106:1337/
     # http://172.29.64.1:1337 # http://127.0.0.1:1337/ #http://172.29.241.32:8080/
    method: POST
    timeout: 1000
    keepalive: 1000
    flush_timeout: 2
    retry_count: 15

- name: file-log
  config: 
    path: /file.log
    reopen: false

- name: request-size-limiting
  config: 
    allowed_payload_size: 24
    size_unit: kilobytes # megabytes
    require_content_length: false

- name: request-termination
  config: 
    status_code: 403
    message: So long and thanks for all the fish!
    # body: "{ a:b }"
    # content_type: "application/json; charset=utf-8"
    trigger: "q" # this will block every request with 'q' in the body or queryParameters
  enabled: false

- name: acl
  config: 
    allow:
    - group1
    - group2
    # deny:
    # - group1
    hide_groups_header: true
  enabled: false

- name: basic-auth
  config: 
    hide_credentials: true
  enabled: false

- name: key-auth
  config: 
    key_names:
    - apikey
    key_in_body: false
    key_in_header: true
    key_in_query: true
    hide_credentials: false
    run_on_preflight: true
  enabled: false

- name: proxy-cache
  config: 
    response_code:
    - 200
    request_method:
    - GET
    - HEAD
    content_type:
    - text/plain
    - application/json
    - application/json; charset=utf-8
    cache_ttl: 300 # in seconds
    strategy: memory
  enabled: false

- name: bot-detection
  config:
    allow:
    - "(C|c)hrome"  # (C|c) means Uppercase "C" or lowercase "c"
    - "curl"
    - "(M|m)ozilla"
    # deny:
    # - "(C|c)hrome"  # (C|c) means Uppercase "C" or lowercase "c"
    # - "curl"
    # - "(M|m)ozilla"
  enabled: false

- name: cors
  config:
    origins:
    - '*' 
    methods:
    - GET
    - POST
    headers:
    - Accept
    - Accept-Version
    - Content-Length
    - Content-MD5
    - Content-Type
    - Date
    - X-Auth-Token
    - Authorization
    exposed_headers:
    - X-Auth-Token
    credentials: true
    max_age: 3600
    preflight_continue: false

- name: rate-limiting
  config: 
    # second: 5
    hour: 100
    policy: local
    fault_tolerant: true
    hide_client_headers: false
    redis_ssl: false
    redis_ssl_verify: false
# comment these if you don't want to store rate limiting data in redis
    policy: redis
    redis_host: 127.0.0.1 # 172.21.0.1 # 127.0.0.1 # 192.168.0.106 # 172.27.59.36
    redis_password: example

- name: ip-restriction
  config:
    deny:
    # - 192.168.0.0/28 # /24 represent range from 0-255
    # - 172.21.0.1/28 # my office ip address
    allow:
#     - 192.168.0.106/24  # /24 represent range from 0-255
      - 172.21.0.1/28 # my office ip address
#     status: 401
    message: cannot grant access
  enabled: false
